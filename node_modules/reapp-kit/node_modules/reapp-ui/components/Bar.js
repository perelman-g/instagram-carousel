'use strict';

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react/addons');
var Component = require('../component');
var BarItem = require('./BarItem');
var clone = require('../lib/niceClone');
var BarItem = require('./BarItem');

var Bar = Component({
  name: 'Bar',

  propTypes: {
    // one of text, icon, icon-text, icon-text-right
    display: React.PropTypes.string,

    // props to pass to each BarItem child
    barItemProps: React.PropTypes.object,

    // attach to which side of screen
    position: React.PropTypes.string,

    // which BarItem to pass active prop
    activeIndex: React.PropTypes.number,

    // automatically wrap children with BarItem
    wrap: React.PropTypes.bool
  },

  render: function render() {
    var _props = this.props;
    var display = _props.display;
    var children = _props.children;
    var barItemProps = _props.barItemProps;
    var activeIndex = _props.activeIndex;
    var position = _props.position;
    var wrap = _props.wrap;

    var props = _objectWithoutProperties(_props, ['display', 'children', 'barItemProps', 'activeIndex', 'position', 'wrap']);

    if (position) this.addStyles('position-' + position);

    return React.createElement(
      'div',
      _extends({}, this.componentProps(), props),
      React.Children.map(children, function (child, i) {
        var childProps = {
          display: display,
          active: i === activeIndex,
          key: i
        };

        if (wrap) return React.createElement(
          BarItem,
          _extends({}, barItemProps, childProps),
          child
        );

        return clone(child, childProps, true);
      })
    );
  }
});

Bar.Item = BarItem;

module.exports = Bar;
'use strict';

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var Component = require('../component');

var _require = require('../lib/ConstantsHelpers');

var hexToRGBA = _require.hexToRGBA;

module.exports = Component({
  name: 'Dots',

  propTypes: {
    // Total dots
    total: React.PropTypes.number.isRequired,

    // Index of active dot
    active: React.PropTypes.number.isRequired
  },

  componentWillMount: function componentWillMount() {
    this.dotProps = this.componentProps('dot');
  },

  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
    return nextProps.total !== this.props.total || nextProps.active !== this.props.active;
  },

  render: function render() {
    var _props = this.props;
    var total = _props.total;
    var active = _props.active;
    var color = _props.color;

    var props = _objectWithoutProperties(_props, ['total', 'active', 'color']);

    if (color) {
      this.addStyles('dotInactive', { background: hexToRGBA(color, 0.2) });
      this.addStyles('dotActive', { background: color });
    }

    var dots = [];

    for (var i = 0; i < total; i++) {
      dots.push(React.createElement('div', _extends({}, this.componentProps(i === active ? 'dotActive' : 'dotInactive'), { key: i })));
    }

    return React.createElement(
      'div',
      _extends({}, this.componentProps(), props),
      React.createElement(
        'div',
        this.componentProps('inner'),
        dots
      )
    );
  }
});
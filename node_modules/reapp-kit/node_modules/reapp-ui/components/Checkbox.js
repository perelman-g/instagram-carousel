'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var Component = require('../component');
var Tappable = require('../helpers/Tappable');

module.exports = Component({
  name: 'Checkbox',

  propTypes: {
    onChange: React.PropTypes.func,
    checked: React.PropTypes.bool
  },

  statics: {
    liNoPad: true
  },

  getInitialState: function getInitialState() {
    return {
      checked: this.props.checked
    };
  },

  handleChange: function handleChange() {
    if (!this.refs.input.getDOMNode().checked) this.setState({ checked: true });else this.setState({ checked: false });

    if (this.props.onChange) this.props.onChange(this.state.checked);
  },

  render: function render() {
    if (this.state.checked) {
      this.addStyles('toggle', 'toggleIsChecked');
      this.addStyles('toggleSwitch', 'toggleSwitchIsChecked');
    }

    return React.createElement(
      Tappable,
      _extends({}, this.componentProps(), { onTap: this.handleChange, stopPropagation: true }),
      React.createElement('input', _extends({}, this.componentProps('input'), this.props, {
        checked: this.state.checked
      })),
      React.createElement(
        'span',
        this.componentProps('toggle'),
        React.createElement('span', this.componentProps('toggleSwitch'))
      )
    );
  }
});
'use strict';

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var Component = require('../component');
var clone = require('../lib/niceClone');
var ListItem = require('./ListItem');
var Title = require('./Title');

var List = Component({
  name: 'List',

  propTypes: {
    // pass props to List.Item
    itemProps: React.PropTypes.object,

    // List title
    title: React.PropTypes.node,

    // Automatically wrap children with List.Item
    wrap: React.PropTypes.bool,

    // Don't add padding
    nopad: React.PropTypes.bool
  },

  render: function render() {
    var _props = this.props;
    var children = _props.children;
    var itemProps = _props.itemProps;
    var title = _props.title;
    var type = _props.type;
    var wrap = _props.wrap;
    var nopad = _props.nopad;

    var props = _objectWithoutProperties(_props, ['children', 'itemProps', 'title', 'type', 'wrap', 'nopad']);

    return React.createElement(
      'div',
      _extends({}, this.componentProps(), props),
      title && React.createElement(
        Title,
        { styles: this.getStyles('title') },
        title
      ),
      React.Children.map(children, function (li, i) {
        if (wrap) return React.createElement(
          ListItem,
          _extends({}, itemProps, {
            index: i,
            key: i,
            nopad: nopad }),
          li.content || li
        );

        return clone(li, { key: i, index: i, nopad: nopad });
      })
    );
  }
});

List.Item = require('./ListItem');

module.exports = List;
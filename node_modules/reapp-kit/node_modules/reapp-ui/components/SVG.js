'use strict';

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react/addons');
var Component = require('../component');

module.exports = Component({
  name: 'SVG',

  propTypes: {
    size: React.PropTypes.number,
    name: React.PropTypes.string,
    color: React.PropTypes.string,
    stroke: React.PropTypes.number,
    shapeRendering: React.PropTypes.string,
    viewBox: React.PropTypes.string,
    crisp: React.PropTypes.bool
  },

  mixins: [React.addons.PureRenderMixin],

  getDefaultProps: function getDefaultProps() {
    return {
      size: 32,
      stroke: 1,
      viewBox: '0 0 64 64',
      color: 'currentColor'
    };
  },

  render: function render() {
    var _props = this.props;
    var size = _props.size;
    var file = _props.file;
    var color = _props.color;
    var stroke = _props.stroke;
    var shapeRendering = _props.shapeRendering;
    var viewBox = _props.viewBox;
    var crisp = _props.crisp;

    var props = _objectWithoutProperties(_props, ['size', 'file', 'color', 'stroke', 'shapeRendering', 'viewBox', 'crisp']);

    if (!file) {
      return null;
    }this.addStyles({
      shapeRendering: shapeRendering ? shapeRendering : 'initial',
      fill: color
    });

    if (crisp) shapeRendering = 'crispEdges';

    if (stroke) Object.assign(props, {
      stroke: color,
      strokeWidth: stroke * 2, // were scaling down from 64 / 2
      strokeLinecap: 'round'
    });

    // center icon
    props.style = Object.assign({
      margin: 'auto' }, props.style);

    return React.createElement(
      'svg',
      _extends({ viewBox: viewBox }, this.componentProps(), props),
      React.createElement('g', { dangerouslySetInnerHTML: { __html: file } })
    );
  }

});
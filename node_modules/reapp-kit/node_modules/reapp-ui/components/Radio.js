'use strict';

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var Component = require('../component');
var Icon = require('../components/Icon');
var Tappable = require('../helpers/Tappable');

module.exports = Component({
  name: 'Radio',

  propTypes: {
    iconProps: React.PropTypes.object
  },

  getInitialState: function getInitialState() {
    return {
      checked: this.props.checked
    };
  },

  handleChange: function handleChange(e) {
    if (!this.refs.input.getDOMNode().checked) this.setState({ checked: true });else this.setState({ checked: false });

    if (this.props.onChange) this.props.onChange(e);
  },

  render: function render() {
    var _props = this.props;
    var iconProps = _props.iconProps;

    var props = _objectWithoutProperties(_props, ['iconProps']);

    return React.createElement(
      Tappable,
      _extends({}, this.componentProps(), { onTap: this.handleChange, stopPropagation: true }),
      React.createElement('input', _extends({}, this.componentProps('input'), props, {
        checked: this.state.checked
      })),
      React.createElement(Icon, _extends({
        file: require('../assets/icons/check.svg'),
        size: 24,
        color: this.getConstant(this.state.checked ? 'active' : 'inactive'),
        styles: { self: { margin: 'auto' } }
      }, iconProps))
    );
  }
});
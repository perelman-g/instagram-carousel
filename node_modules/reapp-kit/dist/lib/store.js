'use strict';

var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (descriptor.value) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _Fynx = require('fynx');

var _Fynx2 = _interopRequireWildcard(_Fynx);

var _Immutable = require('immutable');

var _Immutable2 = _interopRequireWildcard(_Immutable);

var _React = require('react');

var _React2 = _interopRequireWildcard(_React);

var cursor;

var store = function store(obj) {
  if (obj) cursor = _Fynx2['default'].createCursorStore(_Immutable2['default'].fromJS(obj));else {
    return cursor();
  }
};

store.cursor = function (path, Component) {
  if (path) {
    if (!Component) return cursor().getIn(path);

    return (function (_React$Component) {
      function CursoredComponent() {
        _classCallCheck(this, CursoredComponent);

        if (_React$Component != null) {
          _React$Component.apply(this, arguments);
        }
      }

      _inherits(CursoredComponent, _React$Component);

      _createClass(CursoredComponent, [{
        key: 'setCursors',
        value: function setCursors() {
          var _this = this;

          var curPath = path;
          this.cursors = {};

          if (typeof path === 'function') curPath = path.call(this);

          if (Array.isArray(curPath)) curPath.forEach(function (key) {
            _this.cursors[key] = cursor().get(key);
          });else Object.keys(curPath).forEach(function (key) {
            _this.cursors[key] = cursor().getIn([].concat(curPath[key]));
          });
        }
      }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
          this.setCursors.call(this);
          cursor.listen(this.cursorListener, this);
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          cursor.unlisten(this.cursorListener, this);
        }
      }, {
        key: 'cursorListener',
        value: function cursorListener() {
          this.setCursors();
          this.forceUpdate();
        }
      }, {
        key: 'render',
        value: function render() {
          return _React2['default'].createElement(Component, _extends({}, this.props, this.cursors));
        }
      }]);

      return CursoredComponent;
    })(_React2['default'].Component);
  }

  return cursor;
};

exports['default'] = store;
module.exports = exports['default'];